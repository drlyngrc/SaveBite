<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sales History | SaveBite</title>

    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/static/css/history/history.css" />
    <link rel="shortcut icon" href="static/icon-only.png" type="image/x-icon" />
  </head>
  <body>
    <div class="content-wrapper">
      <div class="side-nav"><%- include('../partials/side-nav') %></div>
      <div class="main-content">
        <div class="order-header">
          <div class="order-id">
            <span class="order-id-title">Sales History</span>
          </div>
        </div>
        <div class="order-body">
          <div class="purchase-history">
            <% if (matchedOrders.length > 0) { %>
            <div class="table-title">User Orders</div>
            <table>
              <thead>
                <tr>
                  <th>Payment ID</th>
                  <th>Date</th>
                  <th>Product Name</th>
                  <th>Quantity</th>
                  <th>Amount</th>
                  <th>Delivery Status</th>
                  <th>Payment Status</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                <% matchedOrders.forEach((order) => { %>
                <tr>
                  <td class="order-id"><%= order.paymentId %></td>
                  <td>
                    <%= new Date(order.createdAt).toLocaleString('en-US') %>
                  </td>
                  <td><%= order.productName %></td>
                  <td><%= order.quantity %></td>
                  <td>â‚±<%= order.amount.toFixed(2) %></td>
                  <td><%= order.deliveryStatus %></td>
                  <td><%= order.paymentStatus %></td>
                  <td class="action-icons">
                    <i
                      class="bx bx-dots-vertical-rounded"
                      onclick="toggleDropdown(this)"
                    ></i>
                    <div class="dropdown">
                      <form
                        class="update-sales-status"
                        id="form-<%= order.paymentId %>"
                        action=""
                      >
                        <input
                          type="text"
                          class="actual-payment-id"
                          style="display: none"
                          value="<%= order.paymentId %>"
                        />
                        <input
                          type="text"
                          class="actual-order-id"
                          style="display: none"
                          value="<%= order.orderId %>"
                        />
                        <% if (order.paymentStatus !== "Paid") { %>
                        <button type="submit">Mark as Paid</button>
                        <% } %>
                      </form>
                    </div>
                  </td>
                </tr>
                <% }); %>
              </tbody>
            </table>
            <% } else { %>
            <p>No orders found.</p>
            <% } %>
          </div>
          <div class="sales-history"></div>
        </div>
      </div>
    </div>
    <script>
      // Pending to Paid: toggleStatus(element, 'pending', 'paid');
      // Paid to Pending: toggleStatus(element, 'paid', 'pending');
      // Processing to Completed: toggleStatus(element, 'processing', 'completed');
      // Completed to Processing: toggleStatus(element, 'completed', 'processing');
      function toggleStatus(element, classA, classB) {
        if (element.classList.contains(classA)) {
          element.classList.remove(classA);
          element.classList.add(classB);
          element.textContent =
            classB.charAt(0).toUpperCase() + classB.slice(1);
        }
      }

      function toggleDropdown(icon) {
        let dropdown = icon.nextElementSibling;
        dropdown.style.display =
          dropdown.style.display === "block" ? "none" : "block";
      }

      function markAsPaid(element) {
        console.log(element);
        // let row = element.closest("tr");
        // let badge = row.querySelector(".badge");
        // toggleStatus(badge, "pending", "paid");
        closeDropdown(element);
        // TK backend logic
      }

      function closeDropdown(element) {
        let dropdown = element.closest(".dropdown");
        dropdown.style.display = "none";
      }

      function viewOrder(element) {
        let row = element.closest("tr");
        let orderId = row.querySelector(".order-id").textContent;
        // TK: kung maglalagay pa ng viewing ng order
        closeDropdown(element);
      }

      document.addEventListener("click", function (event) {
        let dropdowns = document.querySelectorAll(".dropdown");
        dropdowns.forEach((dropdown) => {
          if (!dropdown.parentElement.contains(event.target)) {
            dropdown.style.display = "none";
          }
        });
      });

      document.querySelectorAll(".update-sales-status").forEach((form) => {
        form.addEventListener("submit", async (event) => {
          event.preventDefault();

          const row = form.closest("tr");
          const paymentId = row.querySelector(".actual-payment-id").value;
          const orderId = row.querySelector(".actual-order-id").value;

          console.log(`payment: ${paymentId}`);
          console.log(`order: ${orderId}`);

          try {
            const response = await fetch("/api/payment/update-sales", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ paymentId, orderId }),
            });

            const result = await response.json();
            location.reload();
          } catch (e) {
            console.error(e);
          }
        });
      });
    </script>
  </body>
</html>
